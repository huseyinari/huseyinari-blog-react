[{"/home/huseyin/Masaüstü/my_blog/src/index.js":"1","/home/huseyin/Masaüstü/my_blog/src/components/homepage/Home.js":"2","/home/huseyin/Masaüstü/my_blog/src/components/header/Header.js":"3","/home/huseyin/Masaüstü/my_blog/src/apiURL.js":"4","/home/huseyin/Masaüstü/my_blog/src/components/app/App.js":"5","/home/huseyin/Masaüstü/my_blog/src/components/router/RouterComponent.js":"6","/home/huseyin/Masaüstü/my_blog/src/components/not_found/NotFound.js":"7","/home/huseyin/Masaüstü/my_blog/src/components/footer/Footer.js":"8","/home/huseyin/Masaüstü/my_blog/src/components/common/Pagination.js":"9","/home/huseyin/Masaüstü/my_blog/src/components/post_detail/Post.js":"10","/home/huseyin/Masaüstü/my_blog/src/helpers/PostFunctions.js":"11","/home/huseyin/Masaüstü/my_blog/src/components/common/MostReadPosts.js":"12","/home/huseyin/Masaüstü/my_blog/src/components/common/PopulerPosts.js":"13","/home/huseyin/Masaüstü/my_blog/src/components/common/Categories.js":"14","/home/huseyin/Masaüstü/my_blog/src/components/common/SocialButtons.js":"15","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/configureStore.js":"16","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/index.js":"17","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/categoriesReducer.js":"18","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/mostReadPostsReducer.js":"19","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/populerPostsReducer.js":"20","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/initialState.js":"21","/home/huseyin/Masaüstü/my_blog/src/redux/actions/actionTypes.js":"22","/home/huseyin/Masaüstü/my_blog/src/redux/actions/categoriesActions.js":"23","/home/huseyin/Masaüstü/my_blog/src/redux/actions/mostReadPostsActions.js":"24","/home/huseyin/Masaüstü/my_blog/src/redux/actions/populerPostsActions.js":"25","/home/huseyin/Masaüstü/my_blog/src/components/common/GoToTopButton.js":"26","/home/huseyin/Masaüstü/my_blog/src/components/category-posts/CategoryPosts.js":"27","/home/huseyin/Masaüstü/my_blog/src/components/admin/Admin.js":"28","/home/huseyin/Masaüstü/my_blog/src/components/admin/Panel.js":"29","/home/huseyin/Masaüstü/my_blog/src/components/admin/Login.js":"30","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AddPost.js":"31","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/Categories.js":"32","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AllPosts.js":"33","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/Comments.js":"34","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AboutMe.js":"35"},{"size":724,"mtime":1615540926114,"results":"36","hashOfConfig":"37"},{"size":13846,"mtime":1616426423301,"results":"38","hashOfConfig":"37"},{"size":2554,"mtime":1616336481829,"results":"39","hashOfConfig":"37"},{"size":125,"mtime":1616758927847,"results":"40","hashOfConfig":"37"},{"size":1454,"mtime":1615236390172,"results":"41","hashOfConfig":"37"},{"size":807,"mtime":1613488977716,"results":"42","hashOfConfig":"37"},{"size":392,"mtime":1613149132424,"results":"43","hashOfConfig":"37"},{"size":3105,"mtime":1616426415338,"results":"44","hashOfConfig":"37"},{"size":1819,"mtime":1613295202945,"results":"45","hashOfConfig":"37"},{"size":28722,"mtime":1616756173244,"results":"46","hashOfConfig":"37"},{"size":479,"mtime":1616282401468,"results":"47","hashOfConfig":"37"},{"size":918,"mtime":1616336257905,"results":"48","hashOfConfig":"37"},{"size":766,"mtime":1616336253393,"results":"49","hashOfConfig":"37"},{"size":1321,"mtime":1616427702707,"results":"50","hashOfConfig":"37"},{"size":2520,"mtime":1616427488244,"results":"51","hashOfConfig":"37"},{"size":223,"mtime":1613138993086,"results":"52","hashOfConfig":"37"},{"size":353,"mtime":1613386583177,"results":"53","hashOfConfig":"37"},{"size":1160,"mtime":1614424276183,"results":"54","hashOfConfig":"37"},{"size":343,"mtime":1613141757174,"results":"55","hashOfConfig":"37"},{"size":340,"mtime":1613141764622,"results":"56","hashOfConfig":"37"},{"size":170,"mtime":1613385385107,"results":"57","hashOfConfig":"37"},{"size":295,"mtime":1614423338610,"results":"58","hashOfConfig":"37"},{"size":909,"mtime":1614423445662,"results":"59","hashOfConfig":"37"},{"size":504,"mtime":1613139644494,"results":"60","hashOfConfig":"37"},{"size":497,"mtime":1613139736041,"results":"61","hashOfConfig":"37"},{"size":250,"mtime":1613147399527,"results":"62","hashOfConfig":"37"},{"size":9208,"mtime":1616426428779,"results":"63","hashOfConfig":"37"},{"size":1859,"mtime":1616174271090,"results":"64","hashOfConfig":"37"},{"size":7439,"mtime":1616428309336,"results":"65","hashOfConfig":"37"},{"size":2378,"mtime":1613580114967,"results":"66","hashOfConfig":"37"},{"size":11281,"mtime":1616437314164,"results":"67","hashOfConfig":"37"},{"size":11186,"mtime":1616174270146,"results":"68","hashOfConfig":"37"},{"size":4519,"mtime":1616428001371,"results":"69","hashOfConfig":"37"},{"size":8112,"mtime":1616282734860,"results":"70","hashOfConfig":"37"},{"size":5154,"mtime":1616438598698,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1ei1ru1",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"74"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/huseyin/Masaüstü/my_blog/src/index.js",[],["160","161"],"/home/huseyin/Masaüstü/my_blog/src/components/homepage/Home.js",["162","163"],"import React,{Component} from 'react';\nimport {Spin} from 'antd';\n// router\nimport { Link } from 'react-router-dom';\n// api url\nimport apiURL from '../../apiURL';\n// helpers\nimport {convertDate} from '../../helpers/PostFunctions';\n// my components\nimport Pagination from '../common/Pagination';\nimport MostReadPosts from '../common/MostReadPosts';\nimport PopulerPosts from '../common/PopulerPosts';\nimport Categories from '../common/Categories';\nimport SocialButtons from '../common/SocialButtons';\nimport GoToTopButton from '../common/GoToTopButton';\n// redux\nimport {connect} from 'react-redux';\n\nclass Home extends Component{\n    constructor(props) {\n        super(props)\n        this.myRef = React.createRef(); // sayfa içinde scroll'u konumlandırmak için kullanıyorum - goToLatestPosts fonksiyonu\n    }\n    state = {\n        // son yazılar\n        latestPosts:null,\n        currentPage:sessionStorage.getItem('currentPage') ? sessionStorage.getItem('currentPage') : 1,   // session storage içerisinde sayfa değeri varsa o , yoksa null\n        pageCount:null,\n        // random yazılar\n        randomPosts:null,\n    }\n    componentDidMount(){\n        window.scrollTo(0,0);\n        this.getDatasFromServer(); // sayfa yüklendikten 500 ms sonra verileri çek - yükleniyor animasyonu bir miktar beklesin diye\n    }\n    getDatasFromServer = () => {\n        const {currentPage} = this.state;\n\n        this.getRandomPosts();\n        this.getLatestPosts(currentPage);\n    }\n    getLatestPosts = (page) => {\n        const url = apiURL + '/api/get_latest_posts?page=' + page;\n        fetch(url,{\n            method:'GET',\n            headers:{\n                'Content-type' : 'application/json'\n            }\n        })   \n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const latestPosts = responseData.latestPosts.data;\n                const currentPage = responseData.latestPosts.current_page;\n                const pageCount = responseData.latestPosts.last_page;\n                this.setState({latestPosts,currentPage,pageCount});\n            }\n        })\n    }\n    getRandomPosts = () => {\n        const url = apiURL + '/api/get_random_posts';\n        fetch(url,{\n            method:'GET',\n            headers:{\n                'Content-type' : 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const randomPosts = responseData.randomPosts;\n                this.setState({randomPosts});\n            }\n        });\n    }\n    goToLatestPosts = () => {\n        this.myRef.current.scrollIntoView();    // sayfa değiştirme işlemi gerçekleştiğinde scroll'u referans verdiğim section'a konumlandır\n    }\n    paginateClicked = (page) => {\n        this.setState({latestPosts:null});\n        this.goToLatestPosts();\n        sessionStorage.setItem('currentPage',page);\n        this.getLatestPosts(page);\n    }\n    mapRandomPosts = () => {\n        const {randomPosts} = this.state;\n        \n        if(randomPosts === null)\n            return;\n\n        return randomPosts.map( (post,index) => (\n            <div className=\"second-slot\" key={index}>\n                <div className=\"masonry-box post-media\">\n                    <img src={post.coverPhoto} alt=\"\" width=\"25%\" height={400} />\n                    <div className=\"shadoweffect\">\n                        <div className=\"shadow-desc\">\n                            <div className=\"blog-meta\">\n                                <span className=\"bg-orange\">\n                                    <Link to={\"/kategoriler/\" + post.get_category.seo} title=\"\">\n                                        {post.get_category.categoryName}\n                                    </Link>\n                                </span>\n                                <h4>\n                                    <Link to={\"/yazilar/\" + post.seo}>\n                                        {post.title}\n                                    </Link>\n                                </h4>\n                                <small>\n                                    <Link to={\"/yazilar/\" + post.seo}>\n                                        {convertDate(post.created_at)}\n                                    </Link>\n                                </small>\n                                <small>\n                                    <Link to=\"/hakkimda\">\n                                        {post.get_post_owner.nameSurname}\n                                    </Link>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ));\n    }\n    mapLatestPosts = () => {\n        const {latestPosts} = this.state;\n\n        return latestPosts.map( (post,index) => (\n            <div>\n                <div className=\"blog-box row\" key={index}>\n                    <div className=\"col-md-4\">\n                        <div className=\"post-media\">\n                            <Link to={\"/yazilar/\" + post.seo}>\n                                <img src={post.coverPhoto} alt=\"\" width={250} height={150} />\n                                <div className=\"hovereffect\"></div>\n                            </Link>\n                        </div>\n                    </div>\n\n                    <div className=\"blog-meta big-meta col-md-8\">\n                        <h4>\n                            <Link to={\"/yazilar/\" + post.seo}>\n                                {post.title}\n                            </Link>\n                        </h4>\n                        <p>{ post.postContent.length >= 100 ? post.postContent.substr(0,100) + '...' : post.postContent }</p>\n                        <small className=\"firstsmall\">\n                            <Link to={\"/kategoriler/\" + post.get_category.seo} className=\"bg-orange\">\n                                {post.get_category.categoryName}\n                            </Link>\n                        </small>\n                        <small>\n                            {convertDate(post.created_at)}\n                        </small>\n                        <small>\n                            <Link to=\"/hakkimda\" title=\"\">\n                                {post.get_post_owner.nameSurname}\n                            </Link>\n                        </small>\n                        <small>\n                            <i className=\"fa fa-eye\"></i> \n                            {\" \" + post.viewCount}\n                        </small>\n                        <small>\n                            <i class=\"fa fa-comment\" aria-hidden=\"true\"></i>\n                            {\" \" + post.commentCount}\n                        </small>\n                    </div>\n                </div>\n                <hr className=\"invis\" />\n            </div>\n        ));\n    }\n    renderLatestPostsOrSpinner = () => {\n        const {latestPosts} = this.state;\n\n        if(latestPosts === null){\n            return(\n                <div className=\"latest-posts-spinner\">\n                    <Spin size=\"default\" tip=\"Yükleniyor...\" />\n                </div>\n            )\n        }else{\n            return this.mapLatestPosts();\n        }\n    }\n    renderPage = () => {\n        const {randomPosts,currentPage,pageCount} = this.state;\n        const {mostReadPosts,populerPosts,categories} = this.props;\n        \n        if(mostReadPosts === null || populerPosts === null || randomPosts === null || categories === null){  // && kullandım çünkü sadece hepsi birlikte null olduğunda,sayfanın tamamında yükleniyor ikonu gözükecek (sayfa ilk açıldığında)\n            return(\n                <div className=\"page-loading\">\n                    <Spin size=\"large\" tip=\"Yükleniyor...\" />               \n                </div>\n            )\n        }\n        return(\n            <div id=\"wrapper\">\n                <section className=\"section first-section\">\n                    <div className=\"container-fluid\">\n                        <div className=\"masonry-blog clearfix\">\n                            {\n                                this.mapRandomPosts()\n                            }\n                        </div>\n                    </div>\n                </section>\n                <section className=\"section\" ref={this.myRef}>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-9 col-md-12 col-sm-12 col-xs-12\" >\n                                <div className=\"page-wrapper\">\n                                    <div className=\"blog-top clearfix\">\n                                        <h4 className=\"pull-left\"> Son Yazılar <a href=\"#\"><i className=\"fa fa-rss\"></i></a></h4>\n                                    </div>\n\n                                    <div className=\"blog-list clearfix\">\n                                        {\n                                            this.renderLatestPostsOrSpinner()\n                                        }\n                                        {   // REKLAM ALANI\n                                            /* \n                                                <div className=\"row\">\n                                                    <div className=\"col-lg-10 offset-lg-1\">\n                                                        <div className=\"banner-spot clearfix\">\n                                                            <div className=\"banner-img\">\n                                                                <img src=\"upload/banner_02.jpg\" alt=\"\" className=\"img-fluid\" />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <hr className=\"invis\" />\n                                            */\n                                        }\n                                    </div>\n                                </div>\n\n                                <hr className=\"invis\" />\n\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <nav aria-label=\"Page navigation\">\n                                            <ul className=\"pagination justify-content-start\">\n                                                <Pagination \n                                                    currentPage={currentPage}\n                                                    totalPage={pageCount}\n                                                    paginateCount={8}\n                                                    handleClick={this.paginateClicked}\n                                                />\n                                            </ul>\n                                        </nav>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\n                                <div className=\"widget\">\n                                    <h2 className=\"widget-title\">En Çok Okunanlar</h2>\n                                    <div className=\"blog-list-widget\">\n                                        <div className=\"list-group\">\n                                            <MostReadPosts \n                                                posts={mostReadPosts} \n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"widget\">\n                                    <h2 className=\"widget-title\">Popüler Yazılar</h2>\n                                    <div className=\"blog-list-widget\">\n                                        <div className=\"list-group\">\n                                            <PopulerPosts \n                                                posts={populerPosts}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"widget\">\n                                    <h2 className=\"widget-title\">Kategoriler</h2>\n                                    <div className=\"blog-list-widget\">\n                                        <div className=\"list-group\">\n                                            <ul className=\"category-list\" name=\"category-list\">\n                                                <Categories \n                                                    categories={categories}\n                                                />\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                \n                <GoToTopButton />\n            </div>\n        )\n    }\n    render(){\n        return(\n            <div className=\"home\">\n                {\n                    this.renderPage()\n                }\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        categories:state.categoriesReducer,\n        mostReadPosts:state.mostReadPostsReducer,\n        populerPosts:state.populerPostsReducer,\n    }\n}\nexport default connect(mapStateToProps,null)(Home);","/home/huseyin/Masaüstü/my_blog/src/components/header/Header.js",["164","165","166","167","168","169"],"import React,{Component} from 'react';\nimport { Link } from 'react-router-dom';\n// icons\nimport {FaLaravel,FaReact,FaJava} from 'react-icons/fa';\nimport {SiJavascript} from 'react-icons/si';\n// api url\nimport apiURL from '../../apiURL';\n\nclass Header extends Component{\n    render(){\n        return(\n            <header className=\"tech-header header\">\n            <div className=\"container-fluid\">\n                <nav className=\"navbar navbar-toggleable-md navbar-inverse fixed-top bg-inverse\">\n                    <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <Link to=\"/\">\n                        <a className=\"navbar-brand\"><img src={apiURL + '/site_photos/nav-logo.png'} alt=\"\" width={120} height={50}/></a>\n                    </Link>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <Link to=\"/\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\">Anasayfa</a>\n                                </li>\n                            </Link>       \n                            <Link to=\"/hakkimda\" className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/tech-category-03.html\">Hakkımda</a>\n                            </Link>\n                        </ul>\n                        <ul className=\"navbar-nav mr-2\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\"><FaLaravel /></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\"><FaReact /></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\"><FaJava /></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\"><SiJavascript /></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        </header>\n        )\n    }\n}\n\nexport default Header;","/home/huseyin/Masaüstü/my_blog/src/apiURL.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/app/App.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/router/RouterComponent.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/not_found/NotFound.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/footer/Footer.js",["170"],"import React,{Component} from 'react';\n\n// redux\nimport {connect} from 'react-redux';\n// router\nimport {Link} from 'react-router-dom';\n// my components\nimport SocialButtons from '../common/SocialButtons';\n\nclass Footer extends Component{\n\n    mapPopulerCategories = () => {\n        const {categories} = this.props;\n        const categoryCount = 3;    // footer'da kaç kategori gözükecek\n\n        if(categories === null)\n            return;\n        \n        return categories.map( (category,index) => {\n            if(index < categoryCount){\n                return(\n                    <li>\n                        <Link to={\"/kategoriler/\" + category.seo} >\n                            {category.categoryName} \n                            <span>{category.postCount}</span>\n                        </Link>\n                    </li>\n                )\n            }\n        });\n    }\n    render(){\n\n        return(\n            <footer className=\"footer\">\n                <div className=\"container\">\n                    <div className=\"row\">\n\n                        <div className=\"col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"widget\">\n                                <h2 className=\"widget-title\">Popüler Kategoriler</h2>\n                                <div className=\"link-widget\">\n                                    <ul>\n                                        {\n                                            this.mapPopulerCategories()\n                                        }\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-2\"></div>\n                        <div className=\"col-lg-4 col-md-12 col-sm-12 col-xs-12\">\n                            <h2 className=\"widget-title\">Sosyal Medya Hesaplarım</h2>\n                            <SocialButtons />\n                        </div>\n                    {/* \n                        <div className=\"col-lg-2 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"widget\">\n                                <h2 className=\"widget-title\">Copyrights</h2>\n                                <div className=\"link-widget\">\n                                    <ul>\n                                        <li><a href=\"#\">About us</a></li>\n                                        <li><a href=\"#\">Advertising</a></li>\n                                        <li><a href=\"#\">Write for us</a></li>\n                                        <li><a href=\"#\">Trademark</a></li>\n                                        <li><a href=\"#\">License & Help</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    */}\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        categories:state.categoriesReducer\n    }\n}\nexport default connect(mapStateToProps,null)(Footer);","/home/huseyin/Masaüstü/my_blog/src/components/common/Pagination.js",["171","172","173","174"],"import React,{Component} from 'react';\n\nclass Pagination extends Component{\n    render(){\n        const {currentPage,totalPage,paginateCount,handleClick} = this.props;\n        const paginateElements = [];\n        \n        const firstPage = currentPage - (paginateCount/2);  // başlangıç sayfa numarası\n        const lastPage = firstPage < 0 ? currentPage + (paginateCount/2) + (firstPage*-1) : currentPage + (paginateCount/2); // bitiş sayfa numarası\n        // lastPage için eğer başlangıç numarası negatifse : örneğin -3 ise bunun negatif kısmını yani 3 adet sayfayı bitiş numarasına ekliyorum: 1. sayfadan başlayınca da sayfada 10 adet paginate elemanı olması için\n\n        paginateElements.push(\n            <li className=\"page-item\">\n                <a className=\"page-link\" onClick={() => handleClick(1)}>İlk</a>\n            </li>\n        )\n\n        for(let i=firstPage; i<=lastPage; i++){\n            if(i>0 && i<=totalPage){\n                paginateElements.push(\n                    <li className=\"page-item\">\n                        <a className={i===currentPage ? \"page-link active-link\" : 'page-link'} onClick={() => handleClick(i)}>\n                            {i}\n                        </a>\n                    </li>\n                )\n            }    \n        }\n\n        let nextPage = currentPage === totalPage ? 1 : currentPage + 1;\n        paginateElements.push(\n            <li className=\"page-item\">\n                <a className=\"page-link\" onClick={() => handleClick(nextPage)}>{'>'}</a>\n            </li>\n        )\n\n        paginateElements.push(\n            <li className=\"page-item\">\n                <a className=\"page-link\" onClick={() => handleClick(totalPage)}>Son</a>\n            </li>\n        )\n        return paginateElements;\n    }\n}\nexport default Pagination;","/home/huseyin/Masaüstü/my_blog/src/components/post_detail/Post.js",["175","176","177","178","179","180","181","182"],"import React,{Component} from 'react';\nimport {Spin,Badge} from 'antd';\n\n//api url\nimport apiURL from '../../apiURL';\n//helpers\nimport {convertDate} from '../../helpers/PostFunctions';\n// html parser\nimport ReactHtmlParser from 'react-html-parser';\n//redux\nimport {connect} from 'react-redux';\n// router\nimport {Link} from 'react-router-dom';\n// my components\nimport MostReadPosts from '../common/MostReadPosts';\nimport PopulerPosts from '../common/PopulerPosts';\nimport Categories from '../common/Categories';\nimport GoToTopButton from '../common/GoToTopButton';\n\nclass Post extends Component{\n    constructor(props){\n        super(props);\n        this.commentFormRef = React.createRef(); // sayfa içinde scroll'u konumlandırmak için kullanıyorum - goToCommentForm fonksiyonu\n    }\n    state = {\n        postDetail:null,\n        anotherPosts:null,  // okunan yazının kategorisindeki farklı post'lar bunda tutulacak ve sayfada önerilecek\n        postError:null,  // seo olarak yazılan başlığa ait bir post yoksa ekranda yazacak hata bu değişkende tutuluyor\n        \n        // yorum yapma - yanıtlama\n        commentData:{\n            nameSurname:'',\n            content:''\n        },\n        selectedComment:null, // yanıt verilmek üzere seçilen yorumu tutacak\n        formErrors:null,    // yorum yapma formundan dönen hatalar\n        commentLoading:false // true ise yorum yap butonu yerine spinner\n    }\n    componentDidMount(){\n        window.scrollTo(0,0);\n        this.getDatasFromServer(); // bilgileri sunucudan getir\n        this.timeout = setTimeout(this.setViewCountToServer,1000*30);  // 30 saniye sonra post'un görüntüleme sayısını 1 artır\n    }\n    componentWillUnmount(){ // component kaldırılacağı zaman post görüntülenme sayısını artıran geri sayımı durdur\n        clearTimeout(this.timeout);\n    }\n    getDatasFromServer = () => {\n        this.getPostDetail();\n    }\n    setViewCountToServer = () => { // post görüntülenme sayısını 1 artır\n        const {postDetail} = this.state;\n        const url = apiURL + '/api/increase_view_count';\n        const reqBody = { id:postDetail.id }\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json'\n            },\n            body:JSON.stringify(reqBody)\n        });\n    }\n    getPostDetail = () => {\n        const seo = this.props.match.params.seo;\n        const url = apiURL + '/api/get_post_detail/' + seo;\n        \n        fetch(url,{\n            method:'GET',\n            headers:{\n                'Content-type' : 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const postDetail = responseData.details;\n                const anotherPosts = responseData.anotherPosts;\n                this.setState({postDetail,anotherPosts});\n            }else\n                this.setState({postDetail:false,postError:responseData.message});\n        })\n    }\n    setCommentToServer = () => {\n        const {postDetail,commentData} = this.state;\n        const commentUrl = apiURL + '/api/set_comment';\n\n        fetch(commentUrl,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json'\n            },\n            body:JSON.stringify({\n                postId:postDetail.id,\n                nameSurname:commentData.nameSurname,\n                commentContent:commentData.content,\n                token:sessionStorage.getItem('token') ? sessionStorage.getItem('token') : '_' // boş değer göndermiyor onun için _ gönderdim\n            })\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const formErrors = [];\n                const commentLoading = false;\n                const newCommentData = { nameSurname:commentData['nameSurname'], content:'' };\n                // yeni eklenen yorumu state'deki bilgilerimize ekle\n                let postDetail = {...this.state.postDetail}\n                postDetail.get_comments.push({...responseData.newComment,get_answers:[]});\n    \n                this.setState({formErrors,commentLoading,commentData:newCommentData,postDetail});\n            }else{\n                const formErrors = responseData.errors;\n                this.setState({formErrors,commentLoading:false});\n            }\n        })\n    }\n    setAnswerToServer = () => {\n        const {selectedComment,commentData} = this.state;\n        \n        const answerUrl = apiURL + '/api/set_answer';\n\n        fetch(answerUrl,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json'\n            },\n            body:JSON.stringify({\n                commentId:selectedComment.id,\n                nameSurname:commentData.nameSurname,\n                answerContent:commentData.content,\n                token:sessionStorage.getItem('token') ? sessionStorage.getItem('token') : '_' // boş değer göndermiyor onun için _ gönderdim\n            })\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const formErrors = [];\n                const commentLoading = false;\n                const newCommentData = { nameSurname:commentData['nameSurname'], content:'' };\n    \n                // eklenen yanıtı yorumun yanıtları içerisine ekle\n                let postDetail = {...this.state.postDetail}\n                const selectedCommentIndex = postDetail.get_comments.findIndex(comment => comment.id === selectedComment.id);\n                postDetail.get_comments[selectedCommentIndex].get_answers.push(responseData.newAnswer);\n                \n                this.setState({formErrors,commentLoading,commentData:newCommentData,postDetail,selectedComment,selectedComment:null});\n            }else{\n                const formErrors = responseData.errors;\n                this.setState({formErrors,commentLoading:false});\n            }\n        })\n    }\n    setCommentOrAnswer = () => { // yorum veya yanıtlama api'sine istek gönder\n        const {selectedComment} = this.state;\n        \n        if(selectedComment === null){   // seçili yorum yoksa yazıya yorum yapılacak demektir\n            this.setCommentToServer();\n        }else{ // seçili yorum varsa bir yoruma yanıt verilecek demektir\n            this.setAnswerToServer();\n        }\n    }\n    commentButtonClicked = () => {\n        this.setState({commentLoading:true});   // yorum yap butonu yerine spinner gelsin\n        this.setCommentOrAnswer();\n    }\n    goToCommentForm = () => {\n        window.scrollTo({left:0,top:this.commentFormRef.current.offsetTop,behavior:'smooth'});  // scrollu yorum yapma formuna konumlandırıyor.\n    }\n    selectComment = (comment) => {  // yanıtlamak için bir yorum seçiyor\n        this.setState({selectedComment:comment});\n        this.goToCommentForm();\n    }\n    clearSelectedComment = () => {  // seçili yorumu sil\n        this.setState({selectedComment:null});\n    }\n    handleChange = (e) => { // yorum yapma input'larının değişikliklerini yakala\n        const name = e.target.name;\n        const value = e.target.value;\n\n        let {commentData} = this.state;\n        commentData[name] = value;\n\n        this.setState({commentData});\n    }\n    mapAnotherPosts = () => {\n        const {anotherPosts,postDetail} = this.state;\n        \n        if(anotherPosts === null)\n            return;\n        else if(anotherPosts.length === 0){\n            return <small><p>{postDetail.get_category.categoryName} kategorisinde başka bir yazı bulunmamaktadır...</p></small>\n        }\n        else    // post'ların içindeki a'ları Link yapmadım - çünkü yapınca /yazilar url'ine farklı seo ile yönlendirdiği için router componenti yeniden render etmiyor.\n            return anotherPosts.map( (post,index) => (\n                <div className=\"col-lg-6\" key={index}>\n                    <div className=\"blog-box\">\n                    <div className=\"post-media another-post-img\">\n                        <a href={\"/yazilar/\" + post.seo}>\n                            <img src={postDetail.coverPhoto} className=\"img-fluid\" />\n                            <div className=\"hovereffect\">\n                                <span className />\n                            </div>\n                        </a>\n                    </div>\n                    <div className=\"blog-meta\">\n                        <h4><a href={\"/yazilar/\" + post.seo}>{post.title}</a></h4>\n                        <small><a href={\"/yazilar/\" + post.seo}>{convertDate(post.created_at)}</a></small>\n                    </div>\n                    </div>\n                </div>\n            ));\n    }\n    mapAnswers = (answers) => {\n\n        return answers.map( (answer,index) => (\n            <div className=\"comment-answer\" key={index}>\n                <h4>\n                    <span>\n                        {answer.nameSurname + \" \"}\n                        {answer.isAdminAnswer === 1 ? (<Badge size=\"small\" count={\"Yönetici\"}/>) : null}\n                    </span>\n                    <small>{convertDate(answer.created_at)}</small>\n                </h4>\n                <p>{answer.answerContent}</p>\n            </div>\n        ));\n    }\n    mapComments = () => {\n        const {postDetail} = this.state;\n        const comments = postDetail.get_comments;\n\n        if(comments.length === 0)\n            return ( <small><p>İlk yorumu yapan sen ol !</p></small> )\n        else\n            return comments.map( (comment,index) => (\n                <div className=\"media\" key={index}>\n                    {\n                        /* \n                            <a className=\"media-left\" href=\"#\">\n                            <img src=\"/upload/author.jpg\" alt=\"\" className=\"rounded-circle\" />\n                            </a>                        \n                        */\n                    }\n                    <div className=\"media-body\">\n                        <h4 className=\"media-heading user_name\">\n                            <span>\n                                {comment.nameSurname + \" \"}\n                                {comment.isAdminComment === 1 ? (<Badge size=\"small\" count={\"Yönetici\"}/>) : null}\n                            </span>\n                            <small>{convertDate(comment.created_at)}</small>\n                        </h4>\n                        <p>{comment.commentContent}</p>\n                        <a className=\"btn btn-primary btn-sm\" onClick={() => this.selectComment(comment)}>Yanıtla</a>\n                    </div>\n                    <div>\n                        {\n                            this.mapAnswers(comment.get_answers)\n                        }\n                    </div>\n                </div>\n            ))\n    }\n    renderSelectedComment = () => {\n        const {selectedComment} = this.state;\n\n        if(selectedComment === null)\n            return;\n        \n        return(\n            <div className=\"selected-comment\">\n                <p>\n                    {selectedComment.nameSurname}'nın yorumuna yanıt veriyorsunuz... \n                    <a onClick={this.clearSelectedComment} title=\"İptal Et\"> \n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n                    </a>\n                </p>\n            </div>\n        )\n    }\n    renderFormErrors = () => {\n        const {formErrors} = this.state;\n\n        if(formErrors === null)\n            return;\n        else if(formErrors.length === 0)    // yorum başarıyla eklenince formErrors dizisi boş olarak güncellendiği için böyle kontrol ediyorum\n            return ( \n                <div className=\"comment-success\">\n                    <small> Yorumunuz başarıyla eklendi...</small>\n                </div> \n            )\n        else{\n            return Object.keys(formErrors).map( (error,index) => (\n                <div className=\"comment-error\" key={index}> \n                    <small>{formErrors[error][0]}</small> \n                </div>\n            ));\n        }\n    }\n    renderPage = () => {\n        const {postDetail,postError,myRef,commentData,commentLoading} = this.state;\n        const {mostReadPosts,populerPosts,categories} = this.props;\n        \n        if(postDetail === null || mostReadPosts === null || populerPosts === null || categories === null){ // anotherPosts değişkeni postDetail ile birlikte değiştirildiği için kontrol etmedim\n            return(\n                <div className=\"page-loading\">\n                    <Spin size=\"large\" tip=\"Yükleniyor...\" />               \n                </div>\n            )\n        }\n        if(postDetail === false){\n            return(\n                <div style={{display:'flex',height:'100vh',justifyContent:'center',alignItems:'center'}}>\n                    <h1>{postError}</h1>\n                </div>\n            )\n        }\n\n        return (\n            <div id=\"wrapper\">\n                <section className=\"section single-wrapper\">\n                <div className=\"container\" ref={myRef}>\n                    <div className=\"row\">\n                    <div className=\"col-lg-9 col-md-12 col-sm-12 col-xs-12\">\n                        <div className=\"page-wrapper\">\n                        <div className=\"blog-title-area text-center\">\n                            <ol className=\"breadcrumb hidden-xs-down\">\n                            <li className=\"breadcrumb-item\"><Link to=\"/\">Anasayfa</Link></li>\n                            <li className=\"breadcrumb-item\"><Link to=\"/\">Son Yazılar</Link></li>\n                            <li className=\"breadcrumb-item active\">{postDetail.title}</li>\n                            </ol>\n                            <span className=\"color-orange\"><Link to={\"/kategoriler/\" + postDetail.get_category.seo} title>{postDetail.get_category.categoryName}</Link></span>\n                            <h3>{postDetail.title}</h3>\n                            <div className=\"blog-meta big-meta\">\n                            <small>{convertDate(postDetail.created_at)}</small>\n                            <small><Link to=\"/hakkimda\" title>{postDetail.get_post_owner.nameSurname}</Link></small>\n                            <small><i className=\"fa fa-eye\" />{postDetail.viewCount}</small>\n                            <small><i class=\"fa fa-comment\" aria-hidden=\"true\"></i>{\" \" + postDetail.get_comments.length}</small>\n                            </div>\n                            {/* PAYLAŞMA LİNKLERİ\n                                <div className=\"post-sharing\">\n                                    <ul className=\"list-inline\">\n                                        <li><a href=\"#\" className=\"fb-button btn btn-primary\"><i className=\"fa fa-facebook\" /> <span className=\"down-mobile\">Share on Facebook</span></a></li>\n                                        <li><a href=\"#\" className=\"tw-button btn btn-primary\"><i className=\"fa fa-twitter\" /> <span className=\"down-mobile\">Tweet on Twitter</span></a></li>\n                                        <li><a href=\"#\" className=\"gp-button btn btn-primary\"><i className=\"fa fa-google-plus\" /></a></li>\n                                    </ul>\n                                </div>\n                            */}\n                        </div>\n                        <div className=\"single-post-media\">\n                            <img src={postDetail.coverPhoto} alt=\"\" className=\"img-fluid\" />\n                        </div>\n                        <div className=\"blog-content\">  \n                            { ReactHtmlParser(postDetail.postContent) }\n                        </div>\n                        {/* PAYLAŞMA LİNKLERİ\n                            <div className=\"blog-title-area\">\n                                <div className=\"post-sharing\">\n                                    <ul className=\"list-inline\">\n                                        <li><a href=\"#\" className=\"fb-button btn btn-primary\"><i className=\"fa fa-facebook\" /> <span className=\"down-mobile\">Share on Facebook</span></a></li>\n                                        <li><a href=\"#\" className=\"tw-button btn btn-primary\"><i className=\"fa fa-twitter\" /> <span className=\"down-mobile\">Tweet on Twitter</span></a></li>\n                                        <li><a href=\"#\" className=\"gp-button btn btn-primary\"><i className=\"fa fa-google-plus\" /></a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        */}\n\n                        {\n                            /* REKLAM ALANI\n                                <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                    <div className=\"banner-spot clearfix\">\n                                        <div className=\"banner-img\">\n                                        <img src=\"/upload/banner_01.jpg\" alt=\"\" className=\"img-fluid\" />\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                            */\n                        }\n                        <hr className=\"invis1\" />\n                        {\n                            /*   SONRAKİ VE ÖNCEKİ POST KISMI\n                            \n                                <div className=\"custombox prevnextpost clearfix\">\n                                    <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"blog-list-widget\">\n                                        <div className=\"list-group\">\n                                            <a href=\"tech-single.html\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                                            <div className=\"w-100 justify-content-between text-right\">\n                                                <img src=\"/upload/tech_menu_19.jpg\" alt=\"\" className=\"img-fluid float-right\" />\n                                                <h5 className=\"mb-1\">5 Beautiful buildings you need to before dying</h5>\n                                                <small>Prev Post</small>\n                                            </div>\n                                            </a>\n                                        </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"blog-list-widget\">\n                                        <div className=\"list-group\">\n                                            <a href=\"tech-single.html\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\n                                            <div className=\"w-100 justify-content-between\">\n                                                <img src=\"/upload/tech_menu_20.jpg\" alt=\"\" className=\"img-fluid float-left\" />\n                                                <h5 className=\"mb-1\">Let's make an introduction to the glorious world of history</h5>\n                                                <small>Next Post</small>\n                                            </div>\n                                            </a>\n                                        </div>\n                                        </div>\n                                    </div>\n                                    </div>\n                                </div>\n                                <hr className=\"invis1\" />\n                            */\n                        }\n                        <div className=\"custombox authorbox clearfix\">\n                            <h4 className=\"small-title\">Hakkımda</h4>\n                            <div className=\"row\">\n                            <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\n                                <img src={apiURL + '/author_images/' + postDetail.get_post_owner.photo} alt=\"\" className=\"img-fluid rounded-circle\" /> \n                            </div>\n                            <div className=\"col-lg-10 col-md-10 col-sm-10 col-xs-12\">\n                                <h4><Link to=\"/hakkimda\">{postDetail.get_post_owner.nameSurname}</Link></h4>\n                                <p>{postDetail.get_post_owner.about}</p>\n                                <div className=\"topsocial\">\n                                <a href={postDetail.get_post_owner.facebookAddress} target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Facebook\"><i className=\"fa fa-facebook\" /></a>\n                                <a href={postDetail.get_post_owner.youtubeAddress} target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Youtube\"><i className=\"fa fa-youtube\" /></a>\n                                {/* <a href=\"#\" target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Pinterest\"><i className=\"fa fa-pinterest\" /></a> */}\n                                <a href={postDetail.get_post_owner.twitterAddress} target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Twitter\"><i className=\"fa fa-twitter\" /></a>\n                                <a href={postDetail.get_post_owner.instagramAddress} target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Instagram\"><i className=\"fa fa-instagram\" /></a>\n                                {/* <a href=\"#\" target='_blank' data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Website\"><i className=\"fa fa-link\" /></a> */}\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <hr className=\"invis1\" />\n                        <div className=\"custombox clearfix\">\n                            <h4 className=\"small-title\">{postDetail.get_category.categoryName} Kategorisindeki Bazı İçerikler</h4>\n                            <div className=\"row\">\n                                {\n                                    this.mapAnotherPosts()\n                                }\n                            </div>\n                        </div>\n                        <hr className=\"invis1\" />\n                        <div className=\"custombox clearfix\">\n                            <h4 className=\"small-title\">{postDetail.get_comments.length + ' Yorum'}</h4>\n                            <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <div className=\"comments-list\">\n                                    {\n                                        this.mapComments()\n                                    }\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <hr className=\"invis1\" />\n                        <div className=\"custombox clearfix\" ref={this.commentFormRef}>\n                            <h4 className=\"small-title\">Yorum Yap</h4>\n                            <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                {\n                                    this.renderSelectedComment()\n                                }\n                                <form className=\"form-wrapper\">\n                                    <div className=\"comment-form-response\">\n                                        {\n                                            this.renderFormErrors()\n                                        }\n                                    </div>\n                                    <input  type=\"text\" \n                                            className=\"form-control\" \n                                            placeholder=\"Ad soyad\"\n                                            name=\"nameSurname\"\n                                            onChange={this.handleChange} \n                                            value={commentData.nameSurname} \n                                    />\n                                    <textarea className=\"form-control comment-textarea\" \n                                              placeholder=\"Söylemek istedikleriniz...\" \n                                              value={commentData.content} \n                                              name=\"content\" \n                                              onChange={this.handleChange}\n                                    />\n                                    {\n                                        commentLoading === false \n                                        ? <button type=\"submit\" className=\"btn btn-primary comment-button\" onClick={this.commentButtonClicked}>Yorumu Yayınla</button>\n                                        : <Spin size=\"default\" />\n                                    }\n                                </form>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\n                        <div className=\"sidebar\">\n                        {/* -------------- REKLAM ALANI -------------\n\n                            <div className=\"widget\">\n                                <div className=\"banner-spot clearfix\">\n                                <div className=\"banner-img\">\n                                    <img src=\"/upload/banner_07.jpg\" alt=\"\" className=\"img-fluid\" />\n                                </div>\n                                </div>\n                            </div>\n                        */}\n                        \n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">En Çok Okunanlar</h2>\n                            <div className=\"blog-list-widget\">\n                            <div className=\"list-group\">\n                                <MostReadPosts \n                                    posts={mostReadPosts}\n                                />\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">Popüler Yazılar</h2>\n                            <div className=\"blog-list-widget\">\n                            <div className=\"list-group\">\n                                <PopulerPosts \n                                    posts={populerPosts}\n                                />\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">Kategoriler</h2>\n                            <div className=\"blog-list-widget\">\n                                <div className=\"list-group\">\n                                    <ul className=\"category-list\" name=\"category-list\">\n                                        <Categories \n                                            categories={categories}\n                                        />\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        {/* ----------- REKLAM ALANI -----------\n                            <div className=\"widget\">\n                                <div className=\"banner-spot clearfix\">\n                                <div className=\"banner-img\">\n                                    <img src=\"/upload/banner_03.jpg\" alt=\"\" className=\"img-fluid\" />\n                                </div>\n                                </div>\n                            </div>\n                        */}\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </section>\n                <GoToTopButton />\n            </div>\n        );\n    }\n    render(){\n        return(\n            <div className=\"post-detail\">\n                {\n                    this.renderPage()\n                }\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        categories:state.categoriesReducer,\n        mostReadPosts:state.mostReadPostsReducer,\n        populerPosts:state.populerPostsReducer\n    }\n}\nexport default connect(mapStateToProps,null)(Post);","/home/huseyin/Masaüstü/my_blog/src/helpers/PostFunctions.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/common/MostReadPosts.js",["183"],"import React from 'react';\nimport {convertDate} from '../../helpers/PostFunctions';\nimport apiURL from '../../apiURL';\n\nconst MostReadPosts = ({posts}) => {\n\n    if(posts === null)\n        return null;\n    \n    return posts.map( (post,index) => (\n        <a href={\"/yazilar/\" + post.seo} className=\"list-group-item list-group-item-action flex-column align-items-start\" key={index}>\n            <div className=\"w-100 justify-content-between\">\n                <img src={post.coverPhoto} alt=\"\" className=\"float-left\" />\n                <h5 className=\"mb-1\">{post.title.length >= 25 ? post.title.substr(0,25) + '...' : post.title}</h5>\n                <small> {convertDate(post.created_at) + ' '} </small>\n                <small>\n                    <i className=\"fa fa-eye\"></i> \n                    {\" \" + post.viewCount}\n                </small>\n            </div>\n        </a>\n    ));\n}\n\nexport default MostReadPosts;","/home/huseyin/Masaüstü/my_blog/src/components/common/PopulerPosts.js",["184"],"import React from 'react';\nimport apiURL from '../../apiURL';\n\nconst PopulerPosts = ({posts}) => {\n    if(posts === null)\n        return null;\n    \n    return posts.map( (post,index) => (\n        <a href={\"/yazilar/\" + post.seo} className=\"list-group-item list-group-item-action flex-column align-items-start\" key={index}>\n            <div className=\"w-100 justify-content-between\">\n                <img src={post.coverPhoto} alt=\"\" className=\"img-fluid float-left\" />\n                <h5 className=\"mb-1\">{post.title.length >= 25 ? post.title.substr(0,25) + '...' : post.title}</h5>\n                <div>\n                    <small>{post.commentCount + ' Yorum'}</small>\n                </div>\n            </div>\n        </a>\n    ));\n}\n\nexport default PopulerPosts;","/home/huseyin/Masaüstü/my_blog/src/components/common/Categories.js",["185"],"import React from 'react';\n\nconst showAllCategories = () => {\n    const categoriesList = document.getElementsByName('category-list')[0].children;\n    \n    for(let i=0; i<categoriesList.length; i++){\n        categoriesList[i].style.display = 'list-item';\n    }\n    document.getElementsByClassName('show-all-categories')[0].style.display = 'none';\n}\nconst Categories = ({categories}) => {\n    const visibleCategoryCount = 5;  // ilk aşamada 5 tane kategori görünecek\n    let categoriesJSX = [];\n\n    if(categories === null)\n        return null;\n    \n    categories.map((category,index) => (\n        categoriesJSX.push((\n            <li className={index >= visibleCategoryCount ? 'hidden-category' : 'visible-category'} key={index}>\n                <a href={\"/kategoriler/\" + category.seo}>\n                    {category.categoryName + \" (\" + category.postCount + \")\"}\n                </a>\n            </li>\n        ))\n    ));\n    \n    if(categories.length > visibleCategoryCount){\n        categoriesJSX.push((\n            <li className=\"show-all-categories\" onClick={showAllCategories}>\n                <small>\n                    <a><b style={{fontSize:13}}><u>Tüm kategorileri gör...</u></b></a>\n                </small>\n            </li>\n        ))\n    }\n    \n    return categoriesJSX;\n}\n\nexport default Categories;","/home/huseyin/Masaüstü/my_blog/src/components/common/SocialButtons.js",["186","187","188","189"],"import React,{Component} from 'react';\n\n// api url\nimport apiURL from '../../apiURL';\n\nexport default class SocialButtons extends Component{\n    state = {\n        aboutMe:null\n    }\n    componentDidMount(){\n        this.getAboutMe();\n    }\n    getAboutMe = () => {\n        const url = apiURL + '/api/about_me';\n        \n        fetch(url)\n        .then(response => response.json())\n        .then(responseData => this.setState({aboutMe:responseData.aboutMe}))\n    }\n    render(){\n        const {aboutMe} = this.state;\n\n        if(aboutMe === null)\n            return null;\n            \n        return(\n            <div className=\"row text-center\">\n                <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                    <a href={aboutMe.facebookAddress} target=\"_blank\" className=\"social-button facebook-button\">\n                        <i className=\"fa fa-facebook\"></i>\n                        <p>{/* takipçi sayısı */}</p>\n                    </a>\n                </div>\n                <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                    <a href={aboutMe.instagramAddress} target=\"_blank\" className=\"social-button instagram-button\">\n                        <i className=\"fa fa-instagram\"></i>\n                        <p>{/* takipçi sayısı */}</p>\n                    </a>\n                </div>\n                <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                    <a href={aboutMe.youtubeAddress} target=\"_blank\" className=\"social-button youtube-button\">\n                        <i className=\"fa fa-youtube\"></i>\n                        <p>{/* takipçi sayısı */}</p>\n                    </a>\n                </div>\n                <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                    <a href={aboutMe.twitterAddress} target=\"_blank\" className=\"social-button twitter-button\">\n                        <i className=\"fa fa-twitter\"></i>\n                        <p>{/* takipçi sayısı */}</p>\n                    </a>\n                </div>\n                \n                {\n                    /* \n                        <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-6\">\n                            <a href=\"#\" className=\"social-button google-button\">\n                                <i className=\"fa fa-google-plus\"></i>\n                                <p>{takipçi sayısı}</p>\n                            </a>\n                        </div>\n                    */\n                }\n            </div>\n        )\n    }\n}","/home/huseyin/Masaüstü/my_blog/src/redux/reducers/configureStore.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/reducers/index.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/reducers/categoriesReducer.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/reducers/mostReadPostsReducer.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/reducers/populerPostsReducer.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/reducers/initialState.js",["190"],"export default {\n    mostReadPosts:null,\n    populerPosts:null,\n    categories:null,\n\n    nameSurname:''  // yorum yazabilmek için sitede adını soyadını kaydetmeli\n}","/home/huseyin/Masaüstü/my_blog/src/redux/actions/actionTypes.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/actions/categoriesActions.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/actions/mostReadPostsActions.js",[],"/home/huseyin/Masaüstü/my_blog/src/redux/actions/populerPostsActions.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/common/GoToTopButton.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/category-posts/CategoryPosts.js",["191","192","193"],"import React, { Component } from 'react'\nimport {Spin} from 'antd';\n\n//router\nimport {Link} from 'react-router-dom';\n// redux\nimport {connect} from 'react-redux';\n// my components\nimport PopulerPosts from '../common/PopulerPosts';\nimport Categories from '../common/Categories';\nimport SocialButtons from '../common/SocialButtons';\nimport MostReadPosts from '../common/MostReadPosts';\nimport GoToTopButton from '../common/GoToTopButton';\nimport Pagination from '../common/Pagination';\n// api url\nimport apiURL from '../../apiURL';\n// helper\nimport {convertDate} from '../../helpers/PostFunctions';\n\nclass CategoryPosts extends Component {\n    state = {\n      categoryDetails:null,\n\n      posts:null,\n      pageCount:null,\n      currentPage:1\n    }\n    componentDidMount(){\n      this.getDatasFromServer();\n    }\n    getDatasFromServer = () => {\n      this.getCategoryDetails();  \n      // postları çekme isteği , kategori varsa gerçekleşiyor. - getCategoryDetails() fonksiyonu fetch isteğinin başarılı kısmında\n    }\n    getCategoryDetails = () => {\n      const categorySeo = this.props.match.params.seo;\n      const url = apiURL + '/api/get_category_details/' + categorySeo;\n      fetch(url)\n      .then(response => response.json())\n      .then(responseData => {\n        if(responseData.status === true){\n          const categoryDetails = responseData.category;\n          this.setState({categoryDetails});\n          this.getPosts(1);\n        }else{\n          const categoryDetails = false;\n          this.setState({categoryDetails});\n        }\n      });\n    }\n    getPosts = (page = 1) => {\n      const categorySeo = this.props.match.params.seo;\n      const url = apiURL + '/api/get_category_posts/' + categorySeo + '?page=' + page;\n      fetch(url)\n      .then(response => response.json())\n      .then(responseData => {\n        if(responseData.status === true){\n          const posts = responseData.posts.data;\n          const pageCount = responseData.posts.last_page;\n          const currentPage = page;\n          this.setState({posts,pageCount,currentPage},() => window.scrollTo({top:0,behavior:'smooth'}));  // state güncellendikten sonra sayfayı animasyonlu bir şekilde en üste al\n        }\n      })\n    }\n    paginateClicked = (page) => {\n      this.setState({posts:null});\n      this.getPosts(page);\n    }\n    mapPosts = () => {\n      const {posts,categoryDetails} = this.state;\n\n      if(posts === null)\n        return(\n          <div className='posts-loading'>\n            <Spin size=\"default\" tip=\"Yükleniyor...\" />\n          </div>\n        )\n      \n      return posts.map( (post,index) => (\n        <div key={index}>\n          <div className=\"blog-box row\">\n            <div className=\"col-md-4\">\n              <div className=\"post-media\">\n                <Link to={\"/yazilar/\" + post.seo} title>\n                  <img src={post.coverPhoto} alt=\"\" className=\"img-fluid\" />\n                  <div className=\"hovereffect\" />\n                </Link>\n              </div>\n            </div>\n            <div className=\"blog-meta big-meta col-md-8\">\n              <h4><Link to={\"/yazilar/\" + post.seo} title>{post.title}</Link></h4>\n              <p>{post.postContent.length >= 30 ? post.postContent.substr(0,30) + '...' : post.postContent}</p>\n              <small className=\"firstsmall\"><a className=\"bg-orange\">{categoryDetails.categoryName}</a></small>\n              <small>{convertDate(post.created_at)}</small>\n              <small><Link to=\"/hakkimda\" title>{post.get_post_owner.nameSurname}</Link></small>\n              <small><i className=\"fa fa-eye\" /> {post.viewCount}</small>\n              <small><i class=\"fa fa-comment\" aria-hidden=\"true\"></i> {\" \" + post.commentCount} </small>\n            </div>\n          </div>\n          <hr className=\"invis\" />\n        </div>\n      ));\n    }\n    renderPage = () => {\n      const {mostReadPosts,populerPosts,categories} = this.props;\n      const {categoryDetails,currentPage,pageCount} = this.state;\n\n      if(categoryDetails === null)\n          return(\n            <div className=\"page-loading\">\n                <Spin size=\"large\" tip=\"Yükleniyor...\" />               \n            </div>\n      )\n\n      if(categoryDetails === false){  // eğer kategori bulunamazsa categoryDetails false olacak\n        return (\n          <div style={{display:'flex',height:'75vh',justifyContent:'center',alignItems:'center',textAlign:'center'}}>\n            <h1>Kategori Bulunamadı !</h1>\n          </div>\n        )\n      }\n        \n      return (\n            <div>\n              <div className=\"page-title lb single-wrapper\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-8 col-md-8 col-sm-12 col-xs-12\">\n                      <h2>\n                        <i className=\"fa fa-star bg-orange\"/> \n                        {categoryDetails.categoryName} \n                        <small className=\"hidden-xs-down hidden-sm-down\">{categoryDetails.categoryDescription}\n                        </small>\n                      </h2>\n                    </div>\n                    <div className=\"col-lg-4 col-md-4 col-sm-12 hidden-xs-down hidden-sm-down\">\n                      <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item active\"><a>Kategoriler</a></li>\n                        <li className=\"breadcrumb-item active\">{categoryDetails.categoryName}</li>\n                      </ol>\n                    </div>             \n                  </div>\n                </div>\n              </div>\n              <section className=\"section\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-9 col-md-12 col-sm-12 col-xs-12\">\n                      <div className=\"page-wrapper\">\n                        <div className=\"blog-list clearfix\">\n                          {\n                            this.mapPosts()\n                          }\n                        </div>\n                      </div>\n                      <hr className=\"invis\" />\n                      <div className=\"row\">\n                          <div className=\"col-md-12\">\n                              <nav aria-label=\"Page navigation\">\n                                  <ul className=\"pagination justify-content-start\">\n                                      <Pagination \n                                          currentPage={currentPage}\n                                          totalPage={pageCount}\n                                          paginateCount={8}\n                                          handleClick={this.paginateClicked}\n                                      />\n                                  </ul>\n                              </nav>\n                          </div>\n                      </div>\n                    </div>\n                    <div className=\"col-lg-3 col-md-12 col-sm-12 col-xs-12\">\n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">En Çok Okunanlar</h2>\n                            <div className=\"blog-list-widget\">\n                                <div className=\"list-group\">\n                                    <MostReadPosts \n                                        posts={mostReadPosts} \n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">Popüler Yazılar</h2>\n                            <div className=\"blog-list-widget\">\n                                <div className=\"list-group\">\n                                    <PopulerPosts \n                                        posts={populerPosts}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"widget\">\n                            <h2 className=\"widget-title\">Kategoriler</h2>\n                            <div className=\"blog-list-widget\">\n                                <div className=\"list-group\">\n                                    <ul className=\"category-list\" name=\"category-list\">\n                                        <Categories \n                                            categories={categories}\n                                        />\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        \n                    </div>\n                  </div>\n                </div>\n              </section>\n              <GoToTopButton />\n            </div>\n      );\n    }\n    render() {\n      return(\n        <div className=\"category-posts\">\n          {\n            this.renderPage()\n          }\n        </div>\n      )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        mostReadPosts:state.mostReadPostsReducer,\n        populerPosts:state.populerPostsReducer,\n        categories:state.categoriesReducer\n    }\n}\nexport default connect(mapStateToProps,null)(CategoryPosts);","/home/huseyin/Masaüstü/my_blog/src/components/admin/Admin.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/admin/Panel.js",["194","195","196","197","198","199","200","201","202"],"import React, { Component } from 'react';\n// api url\nimport apiURL from '../../apiURL';\n// icons\nimport {RiFileAddLine} from 'react-icons/ri';\nimport{AiFillTags} from 'react-icons/ai';\nimport {IoDocumentTextOutline} from 'react-icons/io5';\nimport {FaComments} from 'react-icons/fa';\nimport {FcAbout} from 'react-icons/fc';\n\n// my components\nimport AddPost from './panel_components/AddPost';\nimport Categories from './panel_components/Categories';\nimport AllPosts from './panel_components/AllPosts';\nimport Comments from './panel_components/Comments';\nimport AboutMe from './panel_components/AboutMe';\n\nexport default class Panel extends Component {\n    state = {\n        activePage:'AddPost',\n\n        selectedPost:null // AllPost componentinde düzenlenmek için post seçilirse , bu seçilen postu AddPost sayfasına iletmek için tutuyorum\n    }\n    componentDidMount(){\n        document.getElementsByClassName('tech-header')[0].style.display = 'none';\n        document.getElementsByClassName('footer')[0].style.display = 'none';\n    }\n    changeActivePage = (page,selectedPost) => {\n        this.setState({activePage:page});\n        \n        if(selectedPost) // selectedPost da gönderildiyse\n            this.setState({selectedPost});\n        else    // selectedPost gönderilmediyse seçili postu null yap - sayfalar arası geçişte eski selectedPost'u tutmaya devam etmesin\n            this.setState({selectedPost:null});\n    }\n    renderPageContent = () => {\n        const {activePage,selectedPost} = this.state;\n\n        if(activePage === 'AddPost')\n            return <AddPost selectedPost={selectedPost}/>\n        else if(activePage === 'Categories')\n            return <Categories />\n        else if(activePage === 'AllPosts')\n            return <AllPosts changeActivePage={this.changeActivePage}/>\n        else if(activePage === 'Comments')\n            return <Comments />\n        else if(activePage === 'AboutMe')\n            return <AboutMe />\n        else\n            return <div>asdasfsfafasfsa</div>\n    }\n    navbarCollapseClicked = () => { // küçük ekranda menüyü açma kısmı tıklandıgında\n        document.getElementById('sidebar').classList.toggle('active');\n        document.getElementById('content').classList.toggle('active');\n    }\n    render() {\n        const {activePage} = this.state;\n\n        return(\n            <div>\n                {/* Vertical navbar */}\n                <div className=\"vertical-nav bg-white\" id=\"sidebar\">\n                <div className=\"py-4 px-3 mb-4 bg-light\">\n                    <div className=\"media d-flex align-items-center\"><img src={apiURL + '/author_images/huseyin-ari.jpg'} alt=\"...\" className=\"mr-3 rounded-circle img-thumbnail shadow-sm\" width={65} />\n                    <div className=\"media-body\">\n                        <h4 className=\"m-0\">Hüseyin ARI</h4>\n                        <p className=\"font-weight-light text-muted mb-0\">Web Developer</p>\n                    </div>\n                    </div>\n                </div>\n                <p className=\"text-gray font-weight-bold text-uppercase px-3 small pb-4 mb-0\">Yönetim</p>\n                <ul className=\"nav flex-column bg-white mb-0\">\n                    <li className=\"nav-item\">\n                        <a  className={activePage === 'AddPost' ? 'nav-link text-dark font-italic active-page' : 'nav-link text-dark font-italic'} \n                            onClick={() => this.changeActivePage('AddPost')}\n                            href='#'\n                        > \n                            <RiFileAddLine /> \n                            Yazı Ekle / Düzenle\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a  className={activePage === 'Categories' ? 'nav-link text-dark font-italic active-page' : 'nav-link text-dark font-italic'} \n                            onClick={() => this.changeActivePage('Categories')}\n                            href='#'\n                        > \n                            <AiFillTags /> Kategoriler\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a  className={activePage === 'AllPosts' ? 'nav-link text-dark font-italic active-page' : 'nav-link text-dark font-italic'} \n                            onClick={() => this.changeActivePage('AllPosts')}\n                            href='#'\n                        > \n                            <IoDocumentTextOutline/> Tüm Yazılar\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a  className={activePage === 'Comments' ? 'nav-link text-dark font-italic active-page' : 'nav-link text-dark font-italic'} \n                            onClick={() => this.changeActivePage('Comments')}\n                            href='#'\n                        > \n                            <FaComments /> Yorumlar\n                        </a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a  className={activePage === 'AboutMe' ? 'nav-link text-dark font-italic active-page' : 'nav-link text-dark font-italic'} \n                            onClick={() => this.changeActivePage('AboutMe')}\n                            href='#'\n                        > \n                            <FcAbout /> Hakkımda\n                        </a>\n                    </li>\n                </ul>\n                <p className=\"text-gray font-weight-bold text-uppercase px-3 small py-4 mb-0\">Charts</p>\n                <ul className=\"nav flex-column bg-white mb-0\">\n                    <li className=\"nav-item\">\n                    <a href=\"#\" className=\"nav-link text-dark font-italic\">\n                        <i className=\"fa fa-area-chart mr-3 text-primary fa-fw\" />\n                        Area charts\n                    </a>\n                    </li>\n                    <li className=\"nav-item\">\n                    <a href=\"#\" className=\"nav-link text-dark font-italic\">\n                        <i className=\"fa fa-bar-chart mr-3 text-primary fa-fw\" />\n                        Bar charts\n                    </a>\n                    </li>\n                    <li className=\"nav-item\">\n                    <a href=\"#\" className=\"nav-link text-dark font-italic\">\n                        <i className=\"fa fa-pie-chart mr-3 text-primary fa-fw\" />\n                        Pie charts\n                    </a>\n                    </li>\n                    <li className=\"nav-item\">\n                    <a href=\"#\" className=\"nav-link text-dark font-italic\">\n                        <i className=\"fa fa-line-chart mr-3 text-primary fa-fw\" />\n                        Line charts\n                    </a>\n                    </li>\n                </ul>\n                </div>\n\n                <div className=\"page-content p-5\" id=\"content\">\n                    <button id=\"sidebarCollapse\" onClick={this.navbarCollapseClicked} type=\"button\" className=\"btn btn-light bg-white rounded-pill shadow-sm px-4 mb-4\"><i className=\"fa fa-bars mr-2\" />\n                        <small className=\"text-uppercase font-weight-bold\">Menü</small>\n                    </button>\n\n                    {\n                        this.renderPageContent()\n                    }\n                </div>\n                {/* End demo content */}\n            </div>\n        )\n    }\n}\n","/home/huseyin/Masaüstü/my_blog/src/components/admin/Login.js",[],"/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AddPost.js",["203"],"import React, { Component } from 'react'\nimport {Button,Modal,Spin} from 'antd';\nimport {BiBookAdd} from 'react-icons/bi';\n// text editor\nimport { HtmlEditor, MenuBar } from '@aeaton/react-prosemirror'\nimport { options, menu } from '@aeaton/react-prosemirror-config-default'\n// redux\nimport {connect} from 'react-redux';\nimport apiURL from '../../../apiURL';\n\nclass AddPost extends Component {\n    state = {\n        postData:{\n            postContent: this.props.selectedPost !== null ? this.props.selectedPost.postContent : '', // componentdidmount içerisindeki güncellemede editör kendini güncellemiyor.onun için burada yazdım\n            title:'',\n            categoryId:'',\n            coverPhoto:''\n        },\n        addOrUpdateResponse:null,\n        loading:false,\n\n        // resim ekleme modal\n        addImageModalVisible:false,\n        image:'',\n        addImageResult:null, // sunucudan dönen değeri tutacak (başarıylıysa status:true,url:resim url ----- başarısızsa status:false)\n        copyUrlResult:null  // yüklenen resmin url'ini kopyalama işleminden sonra 2 saniye ekranda görünecek \"Resim adresi kopyalandı yazısı\"\n    }\n    componentDidMount(){\n        const {selectedPost} = this.props;\n\n        if(selectedPost !== null){\n            this.setState({postData:selectedPost});\n        }\n    }\n    handleChange = (e) => {\n        let {postData} = this.state;\n        const name = e.target.name;\n\n        postData[name] = e.target.value;\n\n        this.setState({postData},() => console.log(postData));\n    }\n    editorOnChange = (value) => {\n        let {postData} = this.state;\n        postData['postContent'] = value;\n        this.setState({postData});\n    }\n    /* --------------------- Resim Yükle -------------------------- */\n    imageInputChanged = (e,type) => {\n        let files = e.target.files || e.dataTransfer.files;\n        if (!files.length)\n            return;\n        if(type === 'coverPhoto')\n            this.createImage(files[0],'coverPhoto');\n        else\n            this.createImage(files[0],'image');\n    }\n    createImage = (file,type) => {\n        let imageReader = new FileReader();     // post içeriği için yüklenecek resim\n        imageReader.onload = (e) => {\n          this.setState({image: e.target.result});\n        };\n\n        let coverPhotoReader = new FileReader();    // post'un kapak fotoğrafı\n        coverPhotoReader.onload = (e) => {\n            this.setState({postData:{...this.state.postData,coverPhoto:e.target.result}});\n        }\n\n        if(type === 'coverPhoto')   // parametre olarak gelen type değişkeni ile state'deki kapak fotoğrafı mı yoksa image nesnesi mi yazılacak onu belirliyorum\n            coverPhotoReader.readAsDataURL(file);\n        else\n            imageReader.readAsDataURL(file);\n    }\n    imageUpload = () => {\n        const {image} = this.state;\n        const url = apiURL + '/api/admin/add_image';\n        const formData = {file: image}\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify(formData)\n        })\n        .then(response => response.json())\n        .then(responseData => this.setState({addImageResult:responseData}));\n    }  \n    /* --------------------------------------------------------- */\n    saveButtonClicked = () => {  \n        this.setState({loading:true});\n        const {selectedPost} = this.props;\n\n        if(selectedPost === null)\n            this.addPostToServer();\n        else\n            this.updatePostToServer();\n    }\n    addPostToServer = () => {\n        const url = apiURL + '/api/admin/add_post';\n        const {postData} = this.state;\n        \n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify(postData)\n        })\n        .then(response => response.json())\n        .then(responseData => this.setState({addOrUpdateResponse:responseData,loading:false}));\n        \n    }\n    updatePostToServer = () => {\n        const url = apiURL + '/api/admin/update_post';\n        const {postData} = this.state;\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify(postData)\n        })\n        .then(response => response.json())\n        .then(responseData => this.setState({addOrUpdateResponse:responseData,loading:false}));\n    }\n    copyUrlToClipboard = (e) => { // post resmi yüklendikten sonra verilen resim url'ini kopyalama tuşu tıklandığında çalışacak fonksiyon\n        // görünmez bir textarea oluşturup, value olarak yüklenen resmin url'ini veriyoruz ve textarea elemanını seçtikten sonra kopyalama fonksiyonunu çalıştırıyoruz\n        const textarea = document.createElement('textarea');\n        textarea.value = this.state.addImageResult.url;\n        textarea.style.position = 'absolute';\n        textarea.style.left = '-9999999px';\n        document.body.appendChild(textarea);\n\n        textarea.select();\n        document.execCommand('copy');\n        this.setState({copyUrlResult:'Resim adresi kopyalandı...'});\n        \n        document.body.removeChild(textarea);\n        setTimeout(() => this.setState({copyUrlResult:''}),2000); // 2 saniye sonra resim adresi kopyalandı yazısı kaybolsun\n    }\n    mapCategories = () => {\n        const {categories} = this.props;\n        \n        return categories.map( category => (\n            <option value={category.id}>{category.categoryName}</option>\n        ));\n    }\n    renderFormResponse = () => {\n        const {addOrUpdateResponse} = this.state;\n\n        if(addOrUpdateResponse === null)\n            return null;\n        else if(addOrUpdateResponse.status === true)\n            return(<div className=\"alert alert-success text-center\">{addOrUpdateResponse.message}</div>)\n        else\n            return Object.keys(addOrUpdateResponse.errors).map(error => (\n                <div><small style={{color:'red'}}>{addOrUpdateResponse.errors[error]}</small></div>\n            ))\n    }\n    renderModalFeedback = () => {\n        const {addImageResult,copyUrlResult} = this.state;\n\n        if(addImageResult === null)\n            return null;\n        else if(addImageResult.status === false)\n            return (<div><small style={{color:'red'}}>Resim yükleme başarısız oldu.</small></div>)\n        else \n            return (\n                <div>\n                    <small style={{color:'green'}}>{addImageResult.url}</small>\n                    <a style={{color:'orangered'}} onClick={this.copyUrlToClipboard} title=\"Adresi kopyala\"> - Kopyala </a>\n                    <hr />\n                    <div><small style={{color:'lightgreen'}}> {copyUrlResult} </small></div> {/* resim adresi kopyalandı... yazısı */}\n                    <br />\n                </div>\n            )\n        \n    }\n    render() {\n        const {postData,loading} = this.state;\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12 add-post-wrapper\">\n                    {\n                        this.renderFormResponse()\n                    }\n                    <hr />\n                    <div>\n                        <div className=\"input-text\" >Yazı Başlığı : </div>\n                        <input className=\"post-title\" placeholder=\"Yazı Başlığı\" name=\"title\" value={postData['title']} onChange={this.handleChange} minLength={5} maxLength={100}/>\n                    </div>\n                    {/*         KAPAK RESMİNİ SUNUCUYA YÜKLEMEK İSTERSEN BU KISMI AÇ, ALTTAKİNİ KAPAT\n                    <div>\n                        <div className=\"input-text\">Yazı Kapak Resmi : </div>\n                        <input type=\"file\" className=\"post-cover-photo\" onChange={(e) => this.imageInputChanged(e,'coverPhoto')}/>\n                    </div>\n                    */}\n                    <div>\n                        <div className=\"input-text\">Kapak Resmi URL: </div>\n                        <input className=\"post-cover-photo\" value={postData['coverPhoto']} onChange={(e) => this.setState({postData:{...postData,coverPhoto:e.target.value}})}/>\n                    </div>\n\n                    <div>\n                        <div className=\"input-text\">Yazı Kategorisi : </div>\n                        <select className=\"category-select\" name=\"categoryId\" onChange={this.handleChange} value={postData['categoryId']}>\n                            <option value={''}>Kategori seçiniz</option>\n                            {\n                                this.mapCategories()\n                            }\n                        </select>\n                    </div>\n\n                    <div className=\"editor-wrapper\">\n                        <HtmlEditor\n                            options={options}\n                            value={postData['postContent']}\n                            onChange={this.editorOnChange}\n                            render={({ editor, view }) => (\n                            <div>\n                                <MenuBar menu={menu} view={view} />\n                                {editor}\n                            </div>\n                            )}\n                        />\n                    </div>\n                    <div>\n                        {\n                            loading === true\n                            ? <Spin size=\"default\" />\n                            : <Button className=\"add-post-button\" type=\"primary\" icon={<BiBookAdd />} size=\"large\" onClick={this.saveButtonClicked}> Kaydet </Button>\n                        }\n                        {\n                            /* SUNUCUYA RESİM YÜKLEME - HEROKU UYGULAMASI İÇİN KAPALI\n                                <Button type=\"dashed\" icon={<BiBookAdd />} size=\"large\" style={{marginLeft:10}} onClick={() => this.setState({addImageModalVisible:true})}>\n                                    Resim Ekle\n                                </Button>\n                            */\n                        }\n                        \n                    </div>\n\n                    {/* resim ekleme modal */}\n                    <Modal title=\"Sunucuya Resim Ekle\" \n                        visible={this.state.addImageModalVisible} \n                        okText=\"Tamam\"\n                        onOk={this.imageUpload} \n                        cancelText=\"İptal\"\n                        onCancel={() => this.setState({addImageModalVisible:false})}\n                    >\n                        {\n                            this.renderModalFeedback()\n                        }\n                        <input type=\"file\" onChange={(e) => this.imageInputChanged(e,'image')}></input>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        categories:state.categoriesReducer\n    }\n}\nexport default connect(mapStateToProps,null)(AddPost);\n","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/Categories.js",["204","205","206"],"import React, { Component } from 'react'\nimport {Table,Space,Button,Modal,Input,Spin} from 'antd';\nimport {DeleteOutlined} from '@ant-design/icons';\n\n//redux\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as categoryActions from '../../../redux/actions/categoriesActions';\n// api url\nimport apiURL from '../../../apiURL';\n\nclass Categories extends Component {\n    state = {\n        addOrUpdateData:{\n            categoryName:'',\n            categoryDescription:''\n        },\n        addOrUpdateModalVisible:false,\n        addOrUpdateLoading:false,\n        addOrUpdateErrors:null,\n\n        selectedCategory:null, // silinmek veya düzenlenmek için tıklanan kategoriyi tutacak\n\n        deleteModalVisible:false,\n    }\n    /* ------------------------------------------------------------- kategori ekleme-düzenleme -------------------------------------------------------- */\n    openAddCategoryModal = () => {\n        let {addOrUpdateData,addOrUpdateModalVisible,selectedCategory} = this.state;\n        \n        addOrUpdateData['categoryName'] = '';\n        addOrUpdateData['categoryDescription'] = '';\n        selectedCategory = null;\n        addOrUpdateModalVisible = true;\n\n        this.setState({addOrUpdateData,selectedCategory,addOrUpdateModalVisible});\n    }\n    openUpdateCategoryModal = (_selectedCategory) => {\n        let {addOrUpdateData,addOrUpdateModalVisible,selectedCategory} = this.state;\n\n        addOrUpdateData['categoryName'] = _selectedCategory.categoryName;\n        addOrUpdateData['categoryDescription'] = _selectedCategory.categoryDescription;\n        \n        addOrUpdateModalVisible = true;\n        selectedCategory = _selectedCategory;\n        \n        this.setState({addOrUpdateData,addOrUpdateModalVisible,selectedCategory});\n    }\n    cancelAddOrUpdate = () => { // iptal etme butonu\n        const addOrUpdateModalVisible = false;\n        const addOrUpdateErrors = null;\n        this.setState({addOrUpdateModalVisible,addOrUpdateErrors});\n    }\n    saveButtonClicked = () => { // kaydet butonu tıklandığında\n        const {selectedCategory} = this.state;\n\n        this.setState({addOrUpdateLoading:true});\n        \n        if(selectedCategory === null)\n            this.addCategoryToServer();\n        else\n            this.updateCategoryToServer();\n    }\n    addCategoryToServer = () => { // server'a istek gönderme\n        const url = apiURL + '/api/admin/add_category';\n        const {addOrUpdateData} = this.state;\n        const {setCategory} = this.props.actions;\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify(addOrUpdateData)\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === false){\n                const addOrUpdateLoading = false;\n                const addOrUpdateErrors = responseData.errors;\n                this.setState({addOrUpdateLoading,addOrUpdateErrors});\n            }else{\n                const addOrUpdateLoading = false;\n                const addOrUpdateModalVisible = false;\n                const newCategory = responseData.newCategory;\n                setCategory(newCategory);   // redux'a yeni eklenen kategoriyi ekle (sayfa yenilenmeden görülebilsin)\n                this.setState({addOrUpdateLoading,addOrUpdateModalVisible}); // loading icon'unu ve modal'ı kapat\n            }\n        });\n    }\n    updateCategoryToServer = () => {\n        const url = apiURL + '/api/admin/update_category';\n        const {addOrUpdateData,selectedCategory} = this.state;\n        const {updateCategory} = this.props.actions;\n\n        const formData = {id:selectedCategory.id,...addOrUpdateData};\n        \n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify(formData)\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === false){\n                const addOrUpdateLoading = false;\n                const addOrUpdateErrors = responseData.errors;\n                this.setState({addOrUpdateLoading,addOrUpdateErrors});\n            }else{\n                const addOrUpdateLoading = false;\n                const addOrUpdateModalVisible = false;\n                const updatedCategory = responseData.category;\n                updateCategory(updatedCategory);    // redux'taki kategoriler dizisinde de güncellemeyi yap\n                this.setState({addOrUpdateLoading,addOrUpdateModalVisible});\n            }\n        })\n        \n    }\n    addOrUpdateHandleChange = (e) => { // input'ların değişikliğini yakala\n        let {addOrUpdateData} = this.state;\n        const name = e.target.name;\n        const value = e.target.value;\n        addOrUpdateData[name] = value;\n        this.setState({addOrUpdateData});\n    }\n    /* ------------------------------------------------------------------------------------------------------------------------------------------- */\n    /* ----------------------------------------------------------- kategori sil ------------------------------------------------------------------ */\n    deleteCategoryFromServer = () => {\n        const url = apiURL + '/api/admin/delete_category';\n        const {deleteCategory} = this.props.actions;\n        const {selectedCategory} = this.state;\n\n        if(selectedCategory === null)\n            return;\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify({id:selectedCategory.id})\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                deleteCategory(selectedCategory.id); // silinen kategoriyi redux'tan da çıkart\n                this.setState({deleteModalVisible:false});\n            }\n        })\n    }\n    cancelModalDelete = () => {\n        const deleteModalVisible = false;\n        const selectedCategory = null;\n\n        this.setState({deleteModalVisible,selectedCategory});\n    }\n    /* --------------------------------------------------------------------------------------------------------------------------------------------*/\n    renderAddCategoryErrors = () => {\n        const {addOrUpdateErrors} = this.state;\n\n        if(addOrUpdateErrors === null)\n            return null;\n\n        return Object.keys(addOrUpdateErrors).map( error => (\n            <li style={{color:'red'}}><small>{addOrUpdateErrors[error]}</small></li>\n        ));\n    }\n    renderAddOrUpdateModal = () => {\n        const {addOrUpdateModalVisible,addOrUpdateLoading,addOrUpdateData} = this.state;\n\n        return(\n            <Modal title=\"Kategori Ekle / Düzenle\" visible={addOrUpdateModalVisible} okText=\"Kaydet\" onOk={this.saveButtonClicked} cancelText=\"İptal\" onCancel={this.cancelAddOrUpdate}>\n                <ul>\n                    {\n                        this.renderAddCategoryErrors()\n                    }\n                </ul>\n                <Input  name=\"categoryName\" \n                        placeholder=\"Kategori Adı\" \n                        value={addOrUpdateData['categoryName']}\n                        onChange={this.addOrUpdateHandleChange}\n                        maxLength={100}\n                />\n                <Input.TextArea name=\"categoryDescription\" \n                                placeholder=\"Kategori Açıklama\"\n                                value={addOrUpdateData['categoryDescription']} \n                                onChange={this.addOrUpdateHandleChange} \n                                rows={5} \n                                showCount={true} \n                                maxLength={500} \n                                style={{marginTop:5}}\n                />\n                {\n                    addOrUpdateLoading === true\n                    ? <Spin size=\"default\" tip=\"Kaydediliyor...\"/>\n                    : null\n                }\n            </Modal>\n        )\n    }\n    renderDeleteModal = () => {\n        const {deleteModalVisible} = this.state;\n        return (\n            <Modal  title=\"Kategoriyi Sil\" \n                    visible={deleteModalVisible} \n                    okText=\"Sil\" \n                    onOk={this.deleteCategoryFromServer} \n                    cancelText=\"İptal\" \n                    onCancel={this.cancelModalDelete}\n                    okButtonProps={{danger:true}}\n            >\n                <p style={{color:\"red\"}}>Devam ederseniz kategori içerdiği yazılarla birlikte tamamen silinecek !</p>\n            </Modal>\n        )\n    }\n    renderCategoriesTable = () => {\n        const {categories} = this.props;\n        let dataSource = [];\n\n        categories.forEach((category,index) => {\n            dataSource.push({\n                key:index,\n                id:category.id,\n                categoryName:category.categoryName,\n                categoryDescription:category.categoryDescription\n            })\n        });\n\n        return(\n            <Table dataSource={dataSource} pagination={{hideOnSinglePage:true}} className=\"admin-page-table\">\n                <Table.Column title=\"Kategori Adı\" dataIndex=\"categoryName\" />\n                <Table.Column title=\"Açıklama\" dataIndex=\"categoryDescription\" />\n                <Table.Column title=\"İşlemler\" render={(value,record) => (\n                    <Space size=\"middle\">\n                        <a className=\"edit-button\" onClick={() => this.openUpdateCategoryModal(record)}>Düzenle</a>\n                        <a className=\"delete-button\" onClick={() => this.setState({selectedCategory:record,deleteModalVisible:true})}>Sil</a>\n                    </Space>\n                )}>\n                </Table.Column>\n            </Table>\n        )\n    }\n    render() {\n        return (\n            <div className=\"categories\">\n\n                <Button type=\"primary\" className=\"add-category-btn\" onClick={this.openAddCategoryModal}>Kategori Ekle</Button>\n                {\n                    this.renderCategoriesTable()\n                }\n                {\n                    this.renderAddOrUpdateModal()\n                }\n                {\n                    this.renderDeleteModal()\n                }\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        categories:state.categoriesReducer\n    }\n}\nfunction mapDispatchToProps(dispatch){\n    return{\n        actions:{\n            setCategory:bindActionCreators(categoryActions.setCategory,dispatch),\n            deleteCategory:bindActionCreators(categoryActions.deleteCategory,dispatch),\n            updateCategory:bindActionCreators(categoryActions.updateCategory,dispatch)\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Categories);",["207","208"],"/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AllPosts.js",["209","210","211"],"import React, { Component } from 'react'\nimport {Table,Space,Spin,Modal} from 'antd';\n\n// api url\nimport apiURL from '../../../apiURL';\n// redux\nimport {connect} from 'react-redux';\n\nclass AllPosts extends Component {\n    state = {\n        posts:null,\n\n        // yazı silme\n        deleteModalVisible:false,\n        selectedPost:null, // silinmek için seçilen yazı\n        deleteResponse:null\n    }\n    componentDidMount(){\n        this.getAllPosts();\n    }\n    getAllPosts = () => {\n        const url = apiURL + '/api/admin/get_all_posts';\n        \n        fetch(url,{\n            method:'GET',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            }\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            const posts = responseData.posts;\n            this.setState({posts});\n        })\n    }\n    deletePostFromServer = () => {\n        const url = apiURL + '/api/admin/delete_post';\n        const {selectedPost} = this.state;\n\n        if(selectedPost !== null){\n            fetch(url,{\n                method:'POST',\n                headers:{\n                    'Content-type' : 'application/json',\n                    'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n                },\n                body:JSON.stringify({id:selectedPost.id})\n            })\n            .then(response => response.json())\n            .then(responseData => this.setState({deleteResponse:responseData}))\n        }\n    }\n    renderDeleteResponse = () => {\n        const {deleteResponse} = this.state;\n        \n        if(deleteResponse === null)\n            return null;\n        \n        if(deleteResponse.status === true)\n            window.location.reload();\n        else\n            alert(deleteResponse.message);\n    }\n    renderDeleteModal = () => {\n        const {deleteModalVisible,selectedPost} = this.state;\n        \n        if(selectedPost === null)\n            return null;\n        \n        return (\n            <Modal  title=\"Kategoriyi Sil\" \n                    visible={deleteModalVisible} \n                    okText=\"Sil\" \n                    onOk={this.deletePostFromServer} \n                    cancelText=\"İptal\"\n                    onCancel={() => this.setState({deleteModalVisible:false,selectedPost:null})}\n                    okButtonProps={{danger:true}}\n            >\n                {\n                    this.renderDeleteResponse()\n                }\n                <p> <b> {selectedPost.title} </b> yazısını tamamen silmek istiyor musunuz ? </p>\n            </Modal>\n        )\n    }\n    renderPostsTable = () => {\n        const {posts} = this.state;\n        const {changeActivePage} = this.props;\n\n        if(posts === null)\n            return (<Spin size=\"default\" tip=\"Yükleniyor...\" style={{height:'80vh',width:'100%',display:'flex',justifyContent:'center',alignItems:'center'}}/>)\n        \n        let dataSource = [];\n\n        posts.forEach((post,index) => {\n            dataSource.push({\n                key:index,\n                id:post.id,\n                title:post.title,\n                postContent:post.postContent,\n                categoryId:post.categoryId,\n                coverPhoto:post.coverPhoto\n            })\n        });\n\n        return(\n            <Table dataSource={dataSource} pagination={{hideOnSinglePage:true}} className=\"all-posts-table\">\n                <Table.Column title=\"Yazı Başlığı\" dataIndex=\"title\" />\n                <Table.Column title=\"İşlemler\" render={(value,record) => (\n                    <Space size=\"middle\">\n                        <a className=\"edit-button\" onClick={() => \n                            changeActivePage('AddPost',record)}>Düzenle</a> \n                        {/* düzenle butonu tıklandığında AddPost sayfasına geçiş yapılıyor ve tıklanan yazıyı da selectedPost olarak gönderiyor */}\n                        <a className=\"delete-button\" onClick={() => this.setState({deleteModalVisible:true,selectedPost:record})}>Sil</a>\n                    </Space>\n                )}>\n                </Table.Column>\n            </Table>\n        )\n    }\n    render() {\n        return (\n            <div className=\"all-posts-wrapper\">\n                {\n                    this.renderPostsTable()\n                }\n                {\n                    this.renderDeleteModal()\n                }\n            </div>\n        )\n    }\n}\nexport default AllPosts;","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/Comments.js",["212","213"],"import React, { Component } from 'react';\nimport {Badge,Spin,Modal} from 'antd';\n\n// api url\nimport apiURL from '../../../apiURL';\n// helper\nimport {convertDate} from '../../../helpers/PostFunctions';\n\nexport default class Comments extends Component {\n    state = {\n        comments:null,\n\n        selectedComment:null, // silinmek için seçilen yorum\n\n        selectedAnswer:null,  // silinmek için seçilen yanıt\n        commentId:null, // silinmek için seçilen yanıtın hangi yoruma ait olduğunu tutuyor\n    }\n    componentDidMount(){\n        this.getComments();\n    }\n    getComments = () => {\n        const url = apiURL + '/api/admin/get_all_comments';\n        fetch(url,{\n            method:'GET',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            }\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const comments = responseData.comments;\n                this.setState({comments});\n            }\n        })\n    }\n    deleteCommentFromServer = () => {\n        const url = apiURL + '/api/admin/delete_comment';\n        const {selectedComment,comments} = this.state;\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body:JSON.stringify({id:selectedComment.id})\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                const updatedComments = comments.filter(comment => comment.id !== selectedComment.id);\n                this.setState({comments:updatedComments,selectedComment:null});\n            }\n        })\n    }\n    deleteAnswerFromServer = () => {\n        const url = apiURL + '/api/admin/delete_answer';\n        const {selectedAnswer} = this.state;\n\n        fetch(url,{\n            method:'POST',\n            headers:{\n                'Content-type' : 'application/json',\n                'Authorization' : 'Bearer ' + sessionStorage.getItem('token') \n            },\n            body:JSON.stringify({id:selectedAnswer.id})\n        })\n        .then(response => response.json())\n        .then(responseData => {\n            if(responseData.status === true){\n                let {selectedAnswer,comments,commentId} = this.state;\n\n                const commentIndex = comments.findIndex(comment => comment.id === commentId);   // state'deki yanıtı silinecek yorumun id'si ile o yorumun index'ini buluyorum\n                const updatedAnswers = comments[commentIndex].get_answers.filter(answer => answer.id !== selectedAnswer.id); // yoruma index'i ile ulaşarak içindeki yanıtları filtreliyorum.\n                const updatedComment = { ...comments[commentIndex],get_answers:updatedAnswers }; // filtrelenmiş yanıtların, mevcut yanıtların yerine geçtiği yeni bir nesne oluşturuyorum.\n\n                comments[commentIndex] = updatedComment;\n                this.setState({comments,selectedAnswer:null,commentId:null});\n            }\n        })\n    }\n    mapAnswers = (answers,commentId) => {\n\n        return answers.map( (answer,index) => (\n            <div className=\"comment-answer\" key={index}>\n                <h4>\n                {\n                    answer.isAdminAnswer === 1 \n                    ? (\n                        <div>\n                            {\" \" + answer.nameSurname + \" \"}\n                            <Badge size=\"small\" count={\"Admin\"}/>\n                        </div>\n                    )\n                    : <span>{answer.nameSurname}</span>\n                }\n                <small>{convertDate(answer.created_at)}</small>\n                </h4>\n                <p>{answer.answerContent}</p>\n                <a className=\"btn-danger\" onClick={() => this.setState({selectedAnswer:answer,commentId})}>Yanıtı Sil</a>\n            </div>\n        ));\n    }\n    mapComments = () => {\n        const {comments} = this.state;\n\n        if(comments === null)\n            return (\n                <div className=\"row md-12 xs-6 d-flex justify-content-center\">\n                    <Spin size=\"default\" tip=\"Yükleniyor...\" />\n                </div>\n            );\n\n        return comments.map((comment,index) => (\n            <div className=\"media\" key={index}>\n                    {\n                        /* \n                            <a className=\"media-left\" href=\"#\">\n                            <img src=\"/upload/author.jpg\" alt=\"\" className=\"rounded-circle\" />\n                            </a>                        \n                        */\n                    }\n                    <div className=\"media-body\">\n                        <h4 className=\"media-heading user_name\">\n                            {\n                                comment.isAdminComment === 1 \n                                ? (\n                                    <div>\n                                        {\" \" + comment.nameSurname + \" \"}\n                                        <Badge size=\"small\" count={\"Admin\"}/>\n                                    </div>\n                                )\n                                : <span>{comment.nameSurname}</span>\n                            }\n                            <small>{convertDate(comment.created_at)}</small>\n                        </h4>\n                        <a href={\"/yazilar/\" + comment.get_post_details.seo }><b>{comment.get_post_details.title}</b></a>\n                        <p>{comment.commentContent}</p>\n\n                        <a className=\"btn-danger\" onClick={() => this.setState({selectedComment:comment})}>Yorumu Sil</a>\n                        <div>\n                            {\n                                this.mapAnswers(comment.get_answers,comment.id)\n                            }\n                        </div>\n                    </div>\n                </div>\n        ))\n    }\n    render() {\n        const {selectedComment,selectedAnswer} = this.state;\n\n        return (\n            <div className=\"comments\">\n                <div className=\"row d-flex justify-content-center\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"card\">\n                            <div className=\"card-body text-center\">\n                                <h4 className=\"card-title\">Tüm Yorumlar</h4>\n                            </div>\n                            <div className=\"comments-list\">\n                                {\n                                    this.mapComments()\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Modal  title=\"Yorumu Sil\"\n                        visible={selectedComment === null ? false : true} \n                        onOk={this.deleteCommentFromServer} \n                        onCancel={() => this.setState({selectedComment:null})} \n                        okText=\"Sil\" \n                        cancelText=\"İptal\"\n                >\n                    {\n                        selectedComment !== null\n                        ? <p><b>{selectedComment.commentContent}</b> yorumu silinecek...</p>\n                        : null\n                    }\n                </Modal>\n\n                <Modal  title=\"Yanıtı Sil\"\n                        visible={selectedAnswer === null ? false : true} \n                        onOk={this.deleteAnswerFromServer} \n                        onCancel={() => this.setState({selectedAnswer:null})} \n                        okText=\"Sil\" \n                        cancelText=\"İptal\"\n                >\n                    {\n                        selectedAnswer !== null\n                        ? <p><b>{selectedAnswer.answerContent}</b> yanıtı silinecek...</p>\n                        : null\n                    }\n                </Modal>\n            </div>\n        )    \n    }\n}\n","/home/huseyin/Masaüstü/my_blog/src/components/admin/panel_components/AboutMe.js",[],{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":14,"column":8,"nodeType":"220","messageId":"221","endLine":14,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":215,"column":80,"nodeType":"224","endLine":215,"endColumn":92},{"ruleId":"222","severity":1,"message":"225","line":19,"column":25,"nodeType":"224","endLine":19,"endColumn":53},{"ruleId":"222","severity":1,"message":"225","line":25,"column":37,"nodeType":"224","endLine":25,"endColumn":61},{"ruleId":"222","severity":1,"message":"223","line":34,"column":33,"nodeType":"224","endLine":34,"endColumn":66},{"ruleId":"222","severity":1,"message":"223","line":37,"column":33,"nodeType":"224","endLine":37,"endColumn":66},{"ruleId":"222","severity":1,"message":"223","line":40,"column":33,"nodeType":"224","endLine":40,"endColumn":66},{"ruleId":"222","severity":1,"message":"223","line":43,"column":33,"nodeType":"224","endLine":43,"endColumn":66},{"ruleId":"226","severity":1,"message":"227","line":19,"column":49,"nodeType":"228","messageId":"229","endLine":19,"endColumn":51},{"ruleId":"222","severity":1,"message":"225","line":14,"column":17,"nodeType":"224","endLine":14,"endColumn":73},{"ruleId":"222","severity":1,"message":"225","line":22,"column":25,"nodeType":"224","endLine":22,"endColumn":127},{"ruleId":"222","severity":1,"message":"225","line":33,"column":17,"nodeType":"224","endLine":33,"endColumn":80},{"ruleId":"222","severity":1,"message":"225","line":39,"column":17,"nodeType":"224","endLine":39,"endColumn":81},{"ruleId":"230","severity":1,"message":"231","line":145,"column":112,"nodeType":"232","messageId":"233","endLine":145,"endColumn":127},{"ruleId":"234","severity":1,"message":"235","line":198,"column":29,"nodeType":"224","endLine":198,"endColumn":86},{"ruleId":"222","severity":1,"message":"225","line":252,"column":25,"nodeType":"224","endLine":252,"endColumn":107},{"ruleId":"222","severity":1,"message":"225","line":272,"column":21,"nodeType":"224","endLine":272,"endColumn":77},{"ruleId":"236","severity":1,"message":"237","line":426,"column":33,"nodeType":"224","endLine":426,"endColumn":164},{"ruleId":"236","severity":1,"message":"237","line":427,"column":33,"nodeType":"224","endLine":427,"endColumn":162},{"ruleId":"236","severity":1,"message":"237","line":429,"column":33,"nodeType":"224","endLine":429,"endColumn":162},{"ruleId":"236","severity":1,"message":"237","line":430,"column":33,"nodeType":"224","endLine":430,"endColumn":166},{"ruleId":"218","severity":1,"message":"238","line":3,"column":8,"nodeType":"220","messageId":"221","endLine":3,"endColumn":14},{"ruleId":"218","severity":1,"message":"238","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"225","line":32,"column":21,"nodeType":"224","endLine":32,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":29,"column":21,"nodeType":"224","endLine":29,"endColumn":113},{"ruleId":"236","severity":1,"message":"237","line":35,"column":21,"nodeType":"224","endLine":35,"endColumn":115},{"ruleId":"236","severity":1,"message":"237","line":41,"column":21,"nodeType":"224","endLine":41,"endColumn":111},{"ruleId":"236","severity":1,"message":"237","line":47,"column":21,"nodeType":"224","endLine":47,"endColumn":111},{"ruleId":"239","severity":1,"message":"240","line":1,"column":1,"nodeType":"241","endLine":7,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":11,"column":8,"nodeType":"220","messageId":"221","endLine":11,"endColumn":21},{"ruleId":"222","severity":1,"message":"225","line":93,"column":45,"nodeType":"224","endLine":93,"endColumn":70},{"ruleId":"222","severity":1,"message":"225","line":138,"column":64,"nodeType":"224","endLine":138,"endColumn":67},{"ruleId":"222","severity":1,"message":"223","line":74,"column":25,"nodeType":"224","endLine":77,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":83,"column":25,"nodeType":"224","endLine":86,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":91,"column":25,"nodeType":"224","endLine":94,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":99,"column":25,"nodeType":"224","endLine":102,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":107,"column":25,"nodeType":"224","endLine":110,"endColumn":26},{"ruleId":"222","severity":1,"message":"223","line":118,"column":21,"nodeType":"224","endLine":118,"endColumn":76},{"ruleId":"222","severity":1,"message":"223","line":124,"column":21,"nodeType":"224","endLine":124,"endColumn":76},{"ruleId":"222","severity":1,"message":"223","line":130,"column":21,"nodeType":"224","endLine":130,"endColumn":76},{"ruleId":"222","severity":1,"message":"223","line":136,"column":21,"nodeType":"224","endLine":136,"endColumn":76},{"ruleId":"222","severity":1,"message":"225","line":176,"column":21,"nodeType":"224","endLine":176,"endColumn":109},{"ruleId":"218","severity":1,"message":"242","line":3,"column":9,"nodeType":"220","messageId":"221","endLine":3,"endColumn":23},{"ruleId":"222","severity":1,"message":"225","line":239,"column":25,"nodeType":"224","endLine":239,"endColumn":105},{"ruleId":"222","severity":1,"message":"225","line":240,"column":25,"nodeType":"224","endLine":240,"endColumn":135},{"ruleId":"214","replacedBy":"243"},{"ruleId":"216","replacedBy":"244"},{"ruleId":"218","severity":1,"message":"245","line":7,"column":9,"nodeType":"220","messageId":"221","endLine":7,"endColumn":16},{"ruleId":"222","severity":1,"message":"225","line":112,"column":25,"nodeType":"224","endLine":113,"endColumn":65},{"ruleId":"222","severity":1,"message":"225","line":115,"column":25,"nodeType":"224","endLine":115,"endColumn":131},{"ruleId":"222","severity":1,"message":"225","line":102,"column":17,"nodeType":"224","endLine":102,"endColumn":108},{"ruleId":"222","severity":1,"message":"225","line":142,"column":25,"nodeType":"224","endLine":142,"endColumn":108},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'SocialButtons' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-dupe-keys","Duplicate key 'selectedComment'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'apiURL' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DeleteOutlined' is defined but never used.",["246"],["247"],"'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]